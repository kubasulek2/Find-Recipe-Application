{"version":3,"sources":["app.js"],"names":["$","request","Map","Object","entries","restriction","filter","ingredient1","ingredient2","ingredient3","createRecipeCard","data","changeRecipe","index","length","drawRecipeData","clearRecipeData","queryHits","image","append","recipe","hits","text","calories","Image","Math","ingredients","yield","src","onload","i","empty","openFridge","headers","mode","redirect","resp","then","json","castRecipes","catch","err","console","log","door","on","resetRequest","async","forEach","find","value","key","map","set","removeClass","val","handle","animationEnd","handleBack","Promise","resolve","setTimeout","toggleClass","basicFetch","this","parent","prev","previousElementSibling","id","includes","get"],"mappings":"AAAAA,EAAE,KACA,IAOIC,EAAU,IAAIC,IAAIC,OAAOC,QAPnB,CACRC,YAAa,GACbC,OAAQ,GACRC,YAAa,KACbC,YAAa,KACbC,YAAa,QAGf,MA+DMC,EAAmBC,IASzB,IAAMC,EAAAA,EAAeD,EAAOE,KAAPC,QACnBC,EAAeJ,EAAME,IAIjBE,EAAAA,GACJC,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,KAAAA,UAAAA,EAAAA,IAGIC,EAAYN,CAAAA,EAAUG,KAC1BC,EAAYJ,EAAAE,IAIZK,EAAiB,CAAAP,EACdQ,KATHH,IAYAhB,IAAEoB,EAAAT,EAAAU,KAAFR,GAA+BO,OAC7BH,EAAAN,EAAAU,KAAuBC,QAAM,EAAAX,EAAAU,KAAeE,OAA9C,EATIL,EAAQ,IAAIM,MAWhBD,EAAAE,KAAmBL,MAAAA,EAAOM,SAAYZ,EAAtCa,OAGCT,EAAAU,IAAAR,EAAAF,MAVDA,EAAMW,OAAS7B,EAAE,UAYfmB,oBAAiBD,EAASU,yDAExBf,EAAAA,eAAAA,KAAAA,EAAAA,OACAD,EAAAA,uBAAmBC,kBAAnBO,EAAAO,SACD3B,EAAA,uBAAIsB,qBAAAC,KAEHX,IAAAA,IAAAA,EAAAA,EAAAA,EAAaD,EAAME,YAAnBC,OAAAgB,IACD9B,EAAA,2BAPHmB,gBAAAC,EAAAM,YAAAI,GAAAR,aAWEtB,EAAA,aAAYiB,IAAAA,QAAZ,KAAAL,EAGKD,EAFHE,EAAAA,IACAD,EAGAA,EAAAA,EAAmBC,KAIzBb,EAAA,aAAMgB,IAAAA,QAAsB,KAPtBJ,EAAaD,EASfE,EAAUkB,EAAZ,IAFFlB,EAMAmB,EAAAA,MANMhB,EAAkB,KACtBhB,EAAE,kBAAkB+B,QACpB/B,EAAE,UAAU+B,SArEVE,MAAAA,sHAAS,CACPC,KAAA,OADOC,SAAA,SAHXF,QAMQG,CAEJ1B,kBAAA,UAZN2B,KAAAD,GAAAA,EAAAE,QAmBAD,KAAM3B,IACAG,EAAQ0B,KADdC,MAAAC,GAAAC,QAAAC,IAAAF,IApCmB,MAIjBG,MAAKC,EAAG7C,EAAR,SACE8C,EAAAA,EAAAA,WADFF,EAAKC,GAAG,QAASE,iBAzBjB/C,EAAEgD,QAAWC,CAAbC,EAAkBC,EAAAC,IAAAA,EAAlBC,IAA0CC,EAAAA,KAH5CtD,EAAA,WAAAiD,KAAA,wBAAAK,YAAA,QAIEtD,EAAE,WAAWiD,KAAK,SAASM,IAAI,IA6B7BC,EAAIC,SAAAA,QAEJ,IAAAC,EAAA,IAAAC,QAAAC,GAAAC,WAAA,IAAAD,EAAAJ,EAAAF,YAAA,SAAA,MACAG,EAAA,IAAAE,QAAAC,GAAAC,WAAA,IAAAD,IAAA,YAEKE,QAVPL,EAaFb,EAAMmB,YAAa,WAgFnB/B,GA9GGhC,EAFD,mBAAA6C,GAAA,QAAA,WACE7C,EAAEgE,MAAMC,SAASC,OAAO5C,KAAKtB,EAAEgE,MAAM1C,UAGvCtB,EAAE,oBAAoB6C,GAAG,QAAS,WAGhC5C,EAAAA,MAAQoD,OAAIE,IAAA,IAEZtD,EAAQoD,IAAI,cAAeW,KAAKG,uBAAuBC,GAAGC,SAAS,KAAO,GAAKpE,EAAQqE,IAAI,gBAC3F5B,EAAQC,IAAI1C,cAAZ+D,KAAAG,uBAAAC,GAAAC,SAAA,KAAA,GAAApE,EAAAqE,IAAA,gBANFrE,EAAAoD,IAAA,cAAAW,KAAAG,uBAAAC,GAAAC,SAAA,KAAA,GAAApE,EAAAqE,IAAA,gBANF5B,QAAAC,IAAA1C","file":"app.js","sourcesContent":["$(() => {\n  let obj = {\n    restriction: '',\n    filter: '',\n    ingredient1: 'aa',\n    ingredient2: 'bb',\n    ingredient3: 'cc'\n  };\n  let request = new Map(Object.entries(obj));\n  const createRequest = () => {\n\n  };\n  const resetRequest = ()=>{\n    request.forEach((value, key, map) => map.set(key, ''));\n\n    $('.fridge').find('.dropdown-menu .show').removeClass('show');\n    $('.fridge').find('input').val('');\n  };\n\n  const handleSelection = ()=> {\n    \n    $('a.dropdown-item').on('click', function () {\n      $(this).parent().prev().text($(this).text())\n    });\n    \n    $('.fa-times-circle').on('click', function () {\n      $(this).prev().val('');\n\n      request.set('ingredient1', this.previousElementSibling.id.includes('1') ? '' : request.get('ingredient1') );\n      request.set('ingredient2', this.previousElementSibling.id.includes('2') ? '' : request.get('ingredient2') );\n      request.set('ingredient3', this.previousElementSibling.id.includes('3') ? '' : request.get('ingredient3') );\n      console.log(request);\n    })\n  };\n\n\n  const openFridge = ()=>{\n    const door = $('.door');\n    const handle = $('.handle');\n\n    door.on('click', async function () {\n      resetRequest();\n      handle.addClass('open');\n\n      let handleBack = new Promise(resolve =>setTimeout(()=>resolve( handle.removeClass('open') ),300) );\n      let animationEnd = new Promise(resolve =>setTimeout(()=>resolve(),600) );\n\n      await handleBack;\n      await animationEnd;\n\n      door.toggleClass('open');\n    })\n  };\n  const basicFetch = ()=>{\n    const appId = 'fd3ea657';\n    const appKey ='a61ca3c11d3b2ec930779e11cfe06c85';\n\n    fetch(`https://api.edamam.com/search?q=chicken+tomato&app_id=${appId}&app_key=${appKey}&from=0&to=6`,{\n      mode: 'cors',\n      redirect: 'follow',\n      headers: {\n        'Accept-Encoding': 'gzip',\n      }\n    }).then(resp => resp.json())\n      .then(data =>{\n        createRecipeCard(data);\n      })\n      .catch(err => console.log(err))\n\n\n\n  };\n  const createRecipeCard = data => {\n    let index = castRecipes(data.hits.length);\n    drawRecipeData(data, index);\n  };\n\n  const castRecipes = (index) => {\n    return index <= 5 ? 0 : Math.floor(Math.random()*(index - 4))\n  };\n\n  const changeRecipe = (data, index) => {\n    drawRecipeData(data, index);\n\n  };\n\n  const drawRecipeData = (data, index) => {\n    clearRecipeData();\n    //console.log(data);\n    let recipe = data.hits[index].recipe;\n    let queryHits = data.hits.length <= 5 ? data.hits.length : 5;\n    let image = new Image();\n    let calories = Math.round(recipe.calories / recipe.yield);\n\n    image.src = recipe.image;\n    image.onload = $('.image')\n      .append(`<img src='${image.src}' class=\"card-img-top mx-auto\" alt=\"recipe image\">`);\n\n    $('.card-title').text(recipe.label);\n    $('.group-info .info-1').text(`Servings: ${recipe.yield}`);\n    $('.group-info .info-2').text(`Cal/Serving: ${calories}`);\n\n    for(let i = 0; i < recipe.ingredients.length ; i++){\n      $('.card-body .ingredients')\n        .append(`<li>- ${recipe.ingredients[i].text}</li>`)\n    }\n\n    $('.btn-prev').one('click', () => {\n      if (index > 0){\n        index--;\n        changeRecipe(data, index)\n      }else{\n        index = queryHits -1;\n        changeRecipe(data, index)\n      }\n    });\n    $('.btn-next').one('click', () => {\n\n      if (index < queryHits - 1){\n        index++;\n        changeRecipe(data, index)\n      }else{\n        index = 0;\n        changeRecipe(data, index)\n      }\n    });\n  };\n  const clearRecipeData = ()=>{\n    $('ul.ingredients').empty();\n    $('.image').empty();\n  };\n\n  basicFetch();\n  openFridge();\n  handleSelection();\n});"]}