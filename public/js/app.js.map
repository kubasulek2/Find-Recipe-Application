{"version":3,"sources":["app.js"],"names":["$","request","restriction","undefined","filter","ingredient1","ingredient2","ingredient3","resetRequest","Object","keys","forEach","key","find","removeClass","val","text","requestFetch","query","createQuery","url","appKey","mode","redirect","headers","Accept-Encoding","then","resp","json","createRecipeCard","data","catch","log","err","array","push","length","result","hits","castRecipes","drawRecipeData","index","floor","Math","maxIndex","clearRecipeData","image","Image","calories","round","recipe","yield","append","label","recipeNumber","attr","i","one","changeRecipe","empty","handle","addClass","animationEnd","Promise","resolve","setTimeout","door","toggleClass","on","this","parent","prev","previousElementSibling","id","includes","openFridge","ingredients","drawnIngredient","random"],"mappings":"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","file":"app.js","sourcesContent":["$(() => {\n  let request = {\n    restriction: undefined,\n    filter: undefined,\n    ingredient1: undefined,\n    ingredient2: undefined,\n    ingredient3: undefined\n  };\n  const createRequest = () => {\n\n    request.restriction = $('.restriction').text() === 'No restriction' ? undefined : $('.restriction').text();\n    request.filter = $('.filter').text() === 'No filter' ? undefined : $('.filter').text();\n    request.ingredient1 = $('#ingredient-1').val() === ''? undefined : $('#ingredient-1').val();\n    request.ingredient2 = $('#ingredient-2').val() === ''? undefined : $('#ingredient-2').val();\n    request.ingredient3 = $('#ingredient-3').val() === ''? undefined : $('#ingredient-3').val();\n\n    requestFetch(request)\n  };\n\n  const resetRequest = ()=>{\n\n    Object.keys(request).forEach((key)=> request[key] = undefined);\n    $('.fridge').find('.dropdown-menu .show').removeClass('show');\n    $('.fridge').find('input').val('');\n    $('.restriction').text('No restriction');\n    $('.filter').text('No filter')\n  };\n\n  const drawRequest = () => {\n\n    resetRequest();\n    let ingredients = ['potato', 'salad', 'steak', 'tuna', 'salmon', 'cod', 'shrimps', 'rocket', 'spinach', 'onion', 'mushroom', 'leek', 'pumpkin', 'peas', 'bean', 'beans', 'cucumber', 'zucchini', 'garlic', 'broccoli', 'cauliflower', 'capers', 'carrot', 'beetroot', 'cabbage', 'asparagus', 'avocado', 'eggplant', 'rice', 'oats', 'buckwheat', 'black beans', 'chickpeas', 'millet', 'lentil', 'chicken', 'beef', 'turkey', 'duck', 'breast', 'pork', 'ham', 'mutton', 'chops', 'milk', 'cream', 'cheddar', 'yogurt', 'cottage', 'butter', 'mango', 'strawberry', 'orange', 'lemon', 'lime', 'coconut', 'banana', 'peach', 'olive', 'almonds', 'sesame', 'walnuts'];\n    let drawnIngredient = ingredients[Math.floor(Math.random() * ingredients.length)];\n\n    request.ingredient1 = drawnIngredient;\n    requestFetch(request);\n  };\n\n  const handleSelection = ()=> {\n\n    $('a.dropdown-item').on('click', function () {\n      $(this).parent().prev().text($(this).text())\n    });\n\n    $('.fa-times-circle').on('click', function () {\n      $(this).prev().val('');\n\n      request.ingredient1 = this.previousElementSibling.id.includes('1') ? undefined : request.ingredient1;\n      request.ingredient2 = this.previousElementSibling.id.includes('2') ? undefined : request.ingredient2;\n      request.ingredient3 = this.previousElementSibling.id.includes('3') ? undefined : request.ingredient3;\n    })\n  };\n\n\n  const openFridge = ()=>{\n    const door = $('.door');\n    const handle = $('.handle');\n\n    door.on('click', async function () {\n      resetRequest();\n      handle.addClass('open');\n\n      let handleBack = new Promise(resolve =>setTimeout(()=>resolve( handle.removeClass('open') ),300) );\n      let animationEnd = new Promise(resolve =>setTimeout(()=>resolve(),600) );\n\n      await handleBack;\n      await animationEnd;\n\n      door.toggleClass('open');\n    })\n  };\n  const requestFetch = request =>{\n\n    const appId = 'fd3ea657';\n    const appKey ='a61ca3c11d3b2ec930779e11cfe06c85';\n    let query = createQuery();\n\n    let filter = request.filter === undefined ? '' : `&diet=${request.filter.toLowerCase()}`;\n    let restriction = request.restriction === undefined ? '' : `&health=${request.restriction.toLowerCase()}`;\n    let url = `https://api.edamam.com/search?q=${query}&app_id=${appId}&app_key=${appKey}${filter}${restriction}&from=0&to=100`;\n\n    fetch(url,{\n      mode: 'cors',\n      redirect: 'follow',\n      headers: {\n        'Accept-Encoding': 'gzip',\n      }\n    }).then(resp => resp.json())\n      .then(data =>{\n        //console.log(data);\n        createRecipeCard(data);\n      })\n      .catch(err => console.log(err))\n\n\n  };\n\n  const createQuery = () => {\n    let array = [];\n    let result ='';\n    if( request.ingredient1 !== undefined) {array.push(request.ingredient1)}\n    if( request.ingredient2 !== undefined) {array.push(request.ingredient2)}\n    if( request.ingredient3 !== undefined) {array.push(request.ingredient3)}\n    if (array.length === 3){ result = `${array[0]}+${array[1]}+${array[2]}`}\n    if (array.length === 2){ result = `${array[0]}+${array[1]}`}\n    if (array.length === 1){ result = `${array[0]}`}\n    return result\n  };\n\n  const createRecipeCard = data => {\n    let length = data.hits.length > 4 ? 4 : data.hits.length;\n    let index = castRecipes(data.hits.length);\n    let maxIndex = index + length;\n    drawRecipeData(data, index, maxIndex);\n  };\n\n  const castRecipes = (index) => {\n    return index <= 5 ? 0 : Math.floor(Math.random()*(index - 4))\n  };\n\n  const changeRecipe = (data, index,maxIndex) => {\n    drawRecipeData(data, index,maxIndex);\n\n  };\n\n  const drawRecipeData = (data, index, maxIndex) => {\n    clearRecipeData();\n    //console.log(data);\n    let recipe = data.hits[index].recipe;\n    let image = new Image();\n    let calories = Math.round(recipe.calories / recipe.yield);\n    let recipeNumber = -(maxIndex-(index+5));\n\n\n    image.src = recipe.image;\n    image.onload = $('.image')\n      .append(`<img src='${image.src}' class=\"card-img-top mx-auto\" alt=\"recipe image\">`);\n\n    $('.card-title').text(recipe.label);\n    $('.group-info .info-1').text(`Servings: ${recipe.yield}`);\n    $('.group-info .info-2').text(`Cal/Serving: ${calories}`);\n    $('.index').text(`${recipeNumber}/5`);\n    $('a.btn').attr('href', recipe.url);\n\n    for(let i = 0; i < recipe.ingredients.length ; i++){\n      $('.card-body .ingredients')\n        .append(`<li>- ${recipe.ingredients[i].text}</li>`)\n    }\n\n    $('.btn-prev').one('click', () => {\n\n      if (index > maxIndex - 4){\n        index--;\n        changeRecipe(data, index, maxIndex)\n      }else{\n        index = maxIndex;\n        changeRecipe(data, index, maxIndex)\n      }\n    });\n    $('.btn-next').one('click', () => {\n      if (index < maxIndex){\n        index++;\n        recipeNumber++;\n        changeRecipe(data, index,maxIndex)\n      }else{\n        recipeNumber = 1;\n        index = maxIndex - 4;\n        changeRecipe(data, index,maxIndex)\n      }\n    });\n  };\n  const clearRecipeData = ()=>{\n    $('ul.ingredients').empty();\n    $('.image').empty();\n  };\n\n  openFridge();\n  handleSelection();\n  $('.search').on('click',createRequest);\n  $('.lucky').on('click',drawRequest);\n});\n"]}